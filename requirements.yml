project:
  name: "shogi-web-game"
  description: "標準的な将棋のルールに従ったWebベースの将棋ゲームです。"
  version: "1.0"

technology_stack:
  frontend:
    - vite
    - react
    - typescript
  backend:
    - vercel
  code_management:
    - git
    - github

requirements:
  functional:
    - "ゲームは駒の動きや駒の取り方を含め、標準的な将棋のルールを実装する必要があります。"
    - "盤面は9×9のマス目とし、将棋の陣地を正確に再現する必要があります。"
    - "王将、飛車、角行、金将、銀将、桂馬、香車、歩兵など、すべての標準的な将棋の駒を実装する必要があります。"
    - "成りルールは将棋の規則に従い、敵陣に入った駒は成れるようにする必要があります。"
    - "王手や詰みの状態を正しく認識できるようにする必要があります。"
    - "不正な手が指されないようにし、無効な操作が行われた場合はユーザーにフィードバックを行う必要があります。"
    - "プレイヤーがいつでも対局の状態をリセットできるようにする必要があります。"

  nonfunctional:
    - "現代的なブラウザ上で効率的に動作する必要があります。"
    - "Vercelへのデプロイが簡単に行えるよう、手順が分かりやすくまとめられている必要があります。"
    - "GitHubでコードを管理し、バージョン管理のベストプラクティスに従う必要があります。"

setup_instructions:
  - "Node.js（バージョン16以上）をインストールしてください。"
  - "GitHubリポジトリをクローンしてください。"
  - "'npm install' または 'yarn' を実行し、依存関係をインストールしてください。"
  - "'npm run dev' または 'yarn dev' を実行して、ローカル開発サーバーを起動してください。"

build_deploy:
  - "'npm run build' を実行して、本番用のバンドルを作成してください。"
  - "Vercel CLIまたはVercelのダッシュボードを使用して、ビルド後のプロジェクトをデプロイしてください。"

project_structure:
  - "srcフォルダにはReactコンポーネント、TypeScriptのモデル、ユーティリティ関数を配置します。"
  - "publicフォルダには静的なアセット（例：将棋の駒の画像やアイコンなど）を配置します。"
  - ".githubフォルダには自動テストやリント用のワークフロー設定（オプション）を含めることができます。"

ci_cd:
  - "必要に応じて、GitHub ActionsなどのCI環境を設定し、コード品質を保証することができます。"

collaboration:
  - "Git Flowなどのブランチ戦略に従って、GitHub上でバージョン管理を行ってください。"
  - "プルリクエストを活用してコードレビューを行ってください。"
  - "GitHub Issuesを使って課題や新機能を管理してください。"

additional_notes:
  - "今後の拡張として、対局のオンライン対戦機能やユーザー認証、AI対局機能の追加などが考えられます。"
  - "将棋のルールや特有のロジックについては、リポジトリ内でドキュメント化しておいてください。"
